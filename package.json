{
  "name": "@bochurin/symlink-config",
  "displayName": "symlink-config",
  "description": "Automated symlink management for package.json files across project containers and workspaces",
  "version": "0.0.66",
  "engines": {
    "vscode": "^1.104.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "symlink-config.applyConfiguration",
        "title": "Apply configuration",
        "category": "symlink-config",
        "icon": "$(play)"
      },
      {
        "command": "symlink-config.cleanConfiguration",
        "title": "Clean handled symlinks",
        "category": "symlink-config",
        "icon": "$(trash)"
      },
      {
        "command": "symlink-config.refreshManagers",
        "title": "Refresh managers",
        "category": "symlink-config",
        "icon": "$(refresh)"
      },
      {
        "command": "symlink-config.clearLogs",
        "title": "Clear logs",
        "category": "symlink-config"
      },
      {
        "command": "symlink-config.showLogs",
        "title": "Show logs",
        "category": "symlink-config"
      },
      {
        "command": "symlink-config.toggleView",
        "title": "Toggle tree view",
        "icon": "$(arrow-swap)"
      },
      {
        "command": "symlink-config.collapseAll",
        "title": "Collapse all",
        "icon": "$(collapse-all)"
      },
      {
        "command": "symlink-config.openSettings",
        "title": "Open symlin-config settings",
        "icon": "$(gear)"
      },
      {
        "command": "symlink-config.selectSymlinkSource",
        "title": "Select as symlink source"
      },
      {
        "command": "symlink-config.cancelSymlinkCreation",
        "title": "Cancel symlink creation"
      },
      {
        "command": "symlink-config.selectSymlinkTarget",
        "title": "Select symlink target folder"
      },
      {
        "command": "symlink-config.openSymlinkConfig",
        "title": "Open symlink configuration"
      }
    ],
    "configuration": {
      "title": "symlink-config",
      "properties": {
        "symlink-config.scriptGeneration": {
          "order": 1,
          "type": "string",
          "scope": "resource",
          "enum": [
            "windows-only",
            "unix-only",
            "both",
            "auto"
          ],
          "default": "auto",
          "description": "Which platforms to generate scripts for. Auto detects current platform."
        },
        "symlink-config.symlinkPathMode": {
          "order": 2,
          "type": "string",
          "scope": "resource",
          "enum": [
            "relative",
            "absolute"
          ],
          "default": "relative",
          "description": "Generate symlinks with relative paths from workspace root or absolute paths."
        },
        "symlink-config.watchWorkspace": {
          "order": 3,
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Enable automatic workspace watching and updating configuration."
        },
        "symlink-config.gitignoreServiceFiles": {
          "order": 4,
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Automatically .gitignore service files."
        },
        "symlink-config.gitignoreSymlinks": {
          "order": 5,
          "type": "boolean",
          "scope": "resource",
          "default": true,
          "description": "Automatically .gitignore handled symlinks."
        },
        "symlink-config.hideServiceFiles": {
          "order": 6,
          "type": "boolean",
          "scope": "resource",
          "default": false,
          "description": "Automatically hide service files from VSCode Explorer."
        },
        "symlink-config.hideSymlinkConfigs": {
          "order": 7,
          "type": "boolean",
          "scope": "resource",
          "default": false,
          "description": "Automatically hide symlink-config.json files from VSCode Explorer."
        },
        "symlink-config.silent": {
          "order": 8,
          "type": "boolean",
          "scope": "resource",
          "default": false,
          "description": "Silent mode - no VS Studio information messages."
        },
        "symlink-config.projectRoot": {
          "order": 9,
          "type": "string",
          "scope": "resource",
          "description": "Project root path for symlink operations. Auto-calculated from workspace folders."
        },
        "symlink-config.maxLogEntries": {
          "order": 10,
          "type": "number",
          "scope": "resource",
          "default": 1000,
          "minimum": 100,
          "description": "Maximum number of log entries before auto-clear. Set to 0 for unlimited."
        }
      }
    },
    "views": {
      "explorer": [
        {
          "id": "symlink-config",
          "name": "symlink-config",
          "when": "workspaceFolderCount > 0",
          "icon": "$(link-external)"
        }
      ]
    },
    "menus": {
      "commandPalette": [
        {
          "command": "symlink-config.applyConfiguration",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "symlink-config.cleanConfiguration",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "symlink-config.refreshManagers",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "symlink-config.clearLogs",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "symlink-config.showLogs",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "symlink-config.toggleView",
          "when": "false"
        },
        {
          "command": "symlink-config.collapseAll",
          "when": "false"
        },
        {
          "command": "symlink-config.openSettings",
          "when": "false"
        },
        {
          "command": "symlink-config.selectSymlinkSource",
          "when": "false"
        },
        {
          "command": "symlink-config.cancelSymlinkCreation",
          "when": "false"
        },
        {
          "command": "symlink-config.selectSymlinkTarget",
          "when": "false"
        },
        {
          "command": "symlink-config.openSymlinkConfig",
          "when": "false"
        }
      ],
      "view/title": [
        {
          "command": "symlink-config.applyConfiguration",
          "when": "view == symlink-config",
          "group": "navigation@1",
          "icon": "$(play)"
        },
        {
          "command": "symlink-config.cleanConfiguration",
          "when": "view == symlink-config",
          "group": "navigation@1",
          "icon": "$(trash)"
        },
        {
          "command": "symlink-config.refreshManagers",
          "when": "view == symlink-config",
          "group": "navigation@2",
          "icon": "$(refresh)"
        },
        {
          "command": "symlink-config.toggleView",
          "when": "view == symlink-config",
          "group": "navigation@2",
          "icon": "$(arrow-swap)"
        },
        {
          "command": "symlink-config.collapseAll",
          "when": "view == symlink-config",
          "group": "navigation@3",
          "icon": "$(collapse-all)"
        },
        {
          "command": "symlink-config.openSettings",
          "when": "view == symlink-config",
          "group": "navigation@4",
          "icon": "$(gear)"
        },
        {
          "command": "symlink-config.applyConfiguration",
          "when": "view == symlink-config",
          "group": "1_apply",
          "icon": "$(play)"
        },
        {
          "command": "symlink-config.cleanConfiguration",
          "when": "view == symlink-config",
          "group": "1_apply",
          "icon": "$(play)"
        },
        {
          "command": "symlink-config.refreshManagers",
          "when": "view == symlink-config",
          "group": "2_actions",
          "icon": "$(refresh)"
        },
        {
          "command": "symlink-config.toggleView",
          "when": "view == symlink-config",
          "group": "2_actions",
          "icon": "$(arrow-swap)"
        },
        {
          "command": "symlink-config.collapseAll",
          "when": "view == symlink-config",
          "group": "3_actions",
          "icon": "$(collapse-all)"
        },
        {
          "command": "symlink-config.openSettings",
          "when": "view == symlink-config",
          "group": "4_settings",
          "icon": "$(gear)"
        }
      ],
      "explorer/context": [
        {
          "command": "symlink-config.selectSymlinkSource",
          "when": "(!explorerResourceIsFolder || explorerResourceIsFolder) && !symlink-config.sourceSelected && !resourceIsSymlink && view != symlink-config",
          "group": "7_modification"
        },
        {
          "command": "symlink-config.cancelSymlinkCreation",
          "when": "symlink-config.sourceSelected && view != symlink-config",
          "group": "7_modification"
        },
        {
          "command": "symlink-config.selectSymlinkTarget",
          "when": "explorerResourceIsFolder && symlink-config.sourceSelected && !resourceIsSymlink && view != symlink-config",
          "group": "7_modification"
        }
      ],
      "view/item/context": [
        {
          "command": "symlink-config.openSymlinkConfig",
          "when": "view == symlink-config && viewItem == symlinkLeaf",
          "group": "navigation"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src",
    "lint:fix": "eslint src --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "test": "vscode-test",
    "git:docs:commit:auto": "git add .docs && git commit -F docs-commit-message.txt",
    "git:docs:commit": "bash scripts/utils/commit/docs-commit.sh",
    "git:code:commit": "bash scripts/utils/commit/code-commit.sh",
    "git:code:commit:auto": "bash scripts/utils/commit/code-commit.sh --auto",
    "q:menu": "bash scripts/utils/q/prompts-menu.sh",
    "q:prompts": "start %USERPROFILE%\\.aws\\amazonq\\prompts"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/vscode": "^1.104.0",
    "@typescript-eslint/eslint-plugin": "^8.42.0",
    "@typescript-eslint/parser": "^8.42.0",
    "@vscode/test-cli": "^0.0.11",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.34.0",
    "eslint-plugin-import": "^2.32.0",
    "prettier": "^3.6.2",
    "ts-loader": "^9.5.4",
    "typescript": "^5.9.2",
    "webpack": "^5.101.3",
    "webpack-cli": "^6.0.1"
  }
}
